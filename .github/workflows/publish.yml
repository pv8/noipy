name: Publish Packages

on:
  release:
    types: [published]

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: ./dist

  upload-assets:
    name: Upload release assets
    needs: build
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        path: ./dist
    - name: Upload assets to release
      run: gh release upload --repo "${{ github.repository }}" "${{ github.event.release.tag_name }}" dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: github.event.release.prerelease == false
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/noipy
    permissions:
      id-token: write  # Needed to access the workflow's OIDC identity.
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-snapcraft:
    name: Publish to Snapcraft 🐧
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4
    - name: Build snap for ${{ matrix.architecture }}
      uses: snapcore/action-build@v1
      id: build
      with:
        build-for: ${{ matrix.architecture }}
    - name: Publish snap to Snapcraft stable channel
      if: steps.build.outputs.snap
      uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
      with:
        snap: ${{ steps.build.outputs.snap }}
        release: stable
