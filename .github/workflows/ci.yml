# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    - name: Install lint dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[lint]"
    - name: Run linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 noipy/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # non-blocking errors
        flake8 noipy/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    - name: Install type checking dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[tests,typing]"
    - name: Run type checking
      run: |
        mypy

  test:
    name: Test - ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Install dependencies
      run: |
        uv sync --python ${{ matrix.python-version }} --extra tests --extra lint --extra typing
        uv pip install coverage
    - name: Run linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run type checking
      run: |
        mypy
    - name: Run tests
      run: |
        pytest -v --cov=. --cov-report term-missing --cov-report xml --junitxml=junit.xml -o junit_family=legacy
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v5
      with:
        env_vars: OS=${{ matrix.os }},PYTHON=${{ matrix.python-version }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload Test Analytics to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
